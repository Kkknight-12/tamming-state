{"ast":null,"code":"var _jsxFileName = \"/Users/knight/FrontEnd_Projects/React/Redux/tamming-state/2-Redux-StateStructure-Retrieval/7-todo-add-filter-features/src/index.js\",\n    _s = $RefreshSig$();\n\nimport ReactDOM from 'react-dom';\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { Provider, connect } from 'react-redux';\nimport { createLogger } from 'redux-logger';\nimport { schema, normalize } from 'normalizr';\nimport uuid from 'uuid/v4'; // hooks\n\nimport React, { useState } from 'react'; // \n\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst todos = [{\n  id: '1',\n  name: 'Redux Standalone with advanced Actions'\n}, {\n  id: '2',\n  name: 'Redux Standalone with advanced Reducers'\n}, {\n  id: '3',\n  name: 'Bootstrap App with Redux'\n}, {\n  id: '4',\n  name: 'Naive Todo with React and Redux'\n}, {\n  id: '5',\n  name: 'Sophisticated Todo with React and Redux'\n}, {\n  id: '6',\n  name: 'Connecting State Everywhere'\n}, {\n  id: '7',\n  name: 'Todo with advanced Redux'\n}, {\n  id: '8',\n  name: 'Todo but more Features'\n}, {\n  id: '9',\n  name: 'Todo with Notifications'\n}, {\n  id: '10',\n  name: 'Hacker News with Redux'\n}]; // //////////\n// schemas //\n// //////////\n\nconst todoSchema = new schema.Entity('todo');\nconst normalizedTodos = normalize(todos, [todoSchema]); // console.log(normalizedTodos);\n\n/*  \n{entities: {…}, result: Array(10)}\nentities:\n  todo:\n    1: {id: \"1\", name: \"Redux Standalone with advanced Actions\"}\n    2: {id: \"2\", name: \"Redux Standalone with advanced Reducers\"}\n    3: {id: \"3\", name: \"Bootstrap App with Redux\"}\n    4: {id: \"4\", name: \"Naive Todo with React and Redux\"}\n    5: {id: \"5\", name: \"Sophisticated Todo with React and Redux\"}\n    6: {id: \"6\", name: \"Connecting State Everywhere\"}\n    7: {id: \"7\", name: \"Todo with advanced Redux\"}\n    8: {id: \"8\", name: \"Todo but more Features\"}\n    9: {id: \"9\", name: \"Todo with Notifications\"}\n    10: {id: \"10\", name: \"Hacker News with Redux\"}\nresult: (10) [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"]\n*/\n\nconst initialTodoState = {\n  entities: normalizedTodos.entities.todo,\n  ids: normalizedTodos.result\n}; // action types\n\nconst TODO_ADD = 'TODO_ADD';\nconst TODO_TOGGLE = 'TODO_TOGGLE';\nconst FILTER_SET = 'FILTER_SET'; // //////////\n// reducer //\n// //////////\n\nfunction todoReducer(state = initialTodoState, action) {\n  switch (action.type) {\n    case TODO_ADD:\n      {\n        return applyAddTodo(state, action);\n      }\n\n    case TODO_TOGGLE:\n      {\n        return applyToggleTodo(state, action);\n      }\n\n    default:\n      return state;\n  }\n}\n\nfunction applyAddTodo(state, action) {\n  const todo = { ...action.todo,\n    completed: false\n  };\n  const entities = { ...state.entities,\n    [todo.id]: todo\n  };\n  const ids = [...state.ids, action.todo.id];\n  return { ...state,\n    entities,\n    ids\n  };\n}\n\n;\n\nfunction applyToggleTodo(state, action) {\n  console.log(state);\n  /* \n  entities:\n    1: {id: \"1\", name: \"Redux Standalone with advanced Actions\"}\n    2: {id: \"2\", name: \"Redux Standalone with advanced Reducers\"}\n    3: {id: \"3\", name: \"Bootstrap App with Redux\"}\n    4: {id: \"4\", name: \"Naive Todo with React and Redux\"}\n    5: {id: \"5\", name: \"Sophisticated Todo with React and Redux\"}\n    6: {id: \"6\", name: \"Connecting State Everywhere\"}\n    7: {id: \"7\", name: \"Todo with advanced Redux\"}\n    8: {id: \"8\", name: \"Todo but more Features\"}\n    9: {id: \"9\", name: \"Todo with Notifications\"}\n    10: {id: \"10\", name: \"Hacker News with Redux\"}\n  ids: (10) [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"]\n  */\n  // console.log(action)\n\n  /* \n    todo: {id: \"1\"}\n    type: \"TODO_TOGGLE\"\n  */\n\n  const id = action.todo.id; // console.log(id) // 1\n\n  const todo = state.entities[id]; // console.log(todo) // {id: \"1\", name: \"Redux Standalone with advanced Actions\"}\n\n  const toggoledTodo = { ...todo,\n    completed: !todo.completed\n  }; // console.log(toggoledTodo) // {id: \"1\", name: \"Redux Standalone with advanced Actions\", completed: true}\n\n  const entities = { ...state.entities,\n    [id]: toggoledTodo\n  }; // id number where you want to write completed/incompleted\n\n  return { ...state,\n    entities\n  };\n}\n\n;\n\nfunction filterReducer(state = 'SHOW_ALL', action) {\n  switch (action.type) {\n    case FILTER_SET:\n      {\n        return applySetFilter(state, action);\n      }\n\n    default:\n      return state;\n  }\n}\n\nfunction applySetFilter(state, action) {\n  return action.filter;\n}\n\nconst rootReducer = combineReducers({\n  todoState: todoReducer,\n  filterState: filterReducer\n}); // //////////////////\n// action creators //\n// //////////////////\n\nfunction doAddTodo(id, name) {\n  return {\n    type: TODO_ADD,\n    todo: {\n      id,\n      name\n    }\n  };\n}\n\nfunction doToggleTodo(id) {\n  return {\n    type: TODO_TOGGLE,\n    todo: {\n      id\n    }\n  };\n}\n\nfunction doSetFilter(filter) {\n  return {\n    type: FILTER_SET,\n    filter\n  };\n} // ////////\n// store //\n// ////////\n\n\nconst logger = createLogger();\nconst store = createStore(rootReducer, undefined, applyMiddleware(logger)); // /////////////\n// components //\n// /////////////\n\nfunction TodoApp() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ConnectedTodoCreate, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConnectedTodoList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TodoApp;\n\nfunction TodoList({\n  todosAsIds\n}) {\n  // console.log(todosAsIds)\n  //  [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"]\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: todosAsIds.map(todoId => /*#__PURE__*/_jsxDEV(ConnectedTodoItem, {\n      // sending in ids -> 1, 2, 3 ......\n      todoIIIId: todoId\n    }, todoId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 33\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = TodoList;\n\nfunction TodoItem({\n  todo,\n  onToggleTodo\n}) {\n  // console.log(todo)\n\n  /* \n    {id: \"1\", name: \"Redux Standalone with advanced Actions\"}\n    {id: \"2\", name: \"Redux Standalone with advanced Reducers\"}\n    {id: \"3\", name: \"Bootstrap App with Redux\"}\n    {id: \"4\", name: \"Naive Todo with React and Redux\"}\n    {id: \"5\", name: \"Sophisticated Todo with React and Redux\"}\n    {id: \"6\", name: \"Connecting State Everywhere\"}\n    {id: \"7\", name: \"Todo with advanced Redux\"}\n    {id: \"8\", name: \"Todo but more Features\"}\n    {id: \"9\", name: \"Todo with Notifications\"}\n    {id: \"10\", name: \"Hacker News with Redux\"} \n  */\n  const {\n    name,\n    id,\n    completed\n  } = todo;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: completed ? \"row line\" : \"row\",\n    children: [name, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      type: \"button\",\n      onClick: () => onToggleTodo(id),\n      children: completed ? \"Incomplete\" : \"Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = TodoItem;\n\nfunction TodoCreate({\n  props\n}) {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n\n  const onChangeName = function (event) {\n    setValue = event.target.value;\n    return setValue;\n  };\n\n  const onCreateTodo = function (event) {\n    props.onAddTodo(value);\n    setValue = '';\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onCreateTodo,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add Todo...\",\n        value: value,\n        onChange: onChangeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n} // //////////\n// Connect //\n// //////////\n// conecting react and redux\n\n\n_s(TodoCreate, \"UW2QyavWVInYp4UHp+V0+/jozqw=\");\n\n_c4 = TodoCreate;\n\nfunction mapStateToPropsList(state) {\n  // console.log(state.todoState)\n  return {\n    // todosAsIds: state.todoState.ids,\n    todosAsIds: getTodosAsIds(state)\n  };\n}\n\nfunction mapStateToPropsItem(state, props) {\n  // console.log(state)\n\n  /*  \n  {todoState: {…}, filterState: \"SHOW_ALL\"}\n  filterState: \"SHOW_ALL\"\n  todoState:\n    entities:\n      1: {id: \"1\", name: \"Redux Standalone with advanced Actions\"}\n      2: {id: \"2\", name: \"Redux Standalone with advanced Reducers\"}\n      3: {id: \"3\", name: \"Bootstrap App with Redux\"}\n      4: {id: \"4\", name: \"Naive Todo with React and Redux\"}\n      5: {id: \"5\", name: \"Sophisticated Todo with React and Redux\"}\n      6: {id: \"6\", name: \"Connecting State Everywhere\"}\n      7: {id: \"7\", name: \"Todo with advanced Redux\"}\n      8: {id: \"8\", name: \"Todo but more Features\"}\n      9: {id: \"9\", name: \"Todo with Notifications\"}\n      10: {id: \"10\", name: \"Hacker News with Redux\"}\n    ids: (10) [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"]\n  */\n  // console.log(props)\n\n  /* \n   {todoIIIId: \"1\"}\n   {todoIIIId: \"2\"}\n   {todoIIIId: \"3\"}\n   {todoIIIId: \"4\"}\n   {todoIIIId: \"5\"}\n   {todoIIIId: \"6\"}\n   {todoIIIId: \"7\"}\n   {todoIIIId: \"8\"}\n   {todoIIIId: \"9\"}\n   {todoIIIId: \"10\"}\n     \n   */\n  return {\n    // sending 1 id at one itteration\n    // todo: state.todoState.entities[props.todoIIIId],\n    todo: getTodo(state, props.todoIIIId)\n  };\n}\n\nfunction mapDispatchToPropsItem(dispatch) {\n  return {\n    onToggleTodo: id => dispatch(doToggleTodo(id))\n  };\n}\n\nfunction mapDispatchToPropsCreate(dispatch) {\n  return {\n    onAddTodo: name => dispatch(doAddTodo(uuid(), name))\n  };\n} // ///////////\n// selector //\n// //////////\n\n\nfunction getTodosAsIds(state) {\n  return state.todoState.ids;\n}\n\nfunction getTodo(state, todoId) {\n  return state.todoState.entities[todoId];\n}\n\nconst ConnectedTodoList = connect(mapStateToPropsList)(TodoList);\nconst ConnectedTodoItem = connect(mapStateToPropsItem, mapDispatchToPropsItem)(TodoItem);\nconst ConnectedTodoCreate = connect(null, mapDispatchToPropsCreate)(TodoCreate);\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(TodoApp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 336,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 335,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TodoApp\");\n$RefreshReg$(_c2, \"TodoList\");\n$RefreshReg$(_c3, \"TodoItem\");\n$RefreshReg$(_c4, \"TodoCreate\");","map":{"version":3,"sources":["/Users/knight/FrontEnd_Projects/React/Redux/tamming-state/2-Redux-StateStructure-Retrieval/7-todo-add-filter-features/src/index.js"],"names":["ReactDOM","applyMiddleware","combineReducers","createStore","Provider","connect","createLogger","schema","normalize","uuid","React","useState","todos","id","name","todoSchema","Entity","normalizedTodos","initialTodoState","entities","todo","ids","result","TODO_ADD","TODO_TOGGLE","FILTER_SET","todoReducer","state","action","type","applyAddTodo","applyToggleTodo","completed","console","log","toggoledTodo","filterReducer","applySetFilter","filter","rootReducer","todoState","filterState","doAddTodo","doToggleTodo","doSetFilter","logger","store","undefined","TodoApp","TodoList","todosAsIds","map","todoId","TodoItem","onToggleTodo","TodoCreate","props","value","setValue","onChangeName","event","target","onCreateTodo","onAddTodo","preventDefault","mapStateToPropsList","getTodosAsIds","mapStateToPropsItem","getTodo","todoIIIId","mapDispatchToPropsItem","dispatch","mapDispatchToPropsCreate","ConnectedTodoList","ConnectedTodoItem","ConnectedTodoCreate","render","document","getElementById"],"mappings":"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","sourcesContent":["import ReactDOM from 'react-dom';\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { Provider, connect } from 'react-redux';\nimport { createLogger } from 'redux-logger';\nimport { schema, normalize } from 'normalizr';\nimport uuid from 'uuid/v4';\n\n// hooks\nimport React, { useState } from 'react';\n// \nimport './index.css';\n\nconst todos = [\n  { id: '1', name: 'Redux Standalone with advanced Actions' },\n  { id: '2', name: 'Redux Standalone with advanced Reducers' },\n  { id: '3', name: 'Bootstrap App with Redux' },\n  { id: '4', name: 'Naive Todo with React and Redux' },\n  { id: '5', name: 'Sophisticated Todo with React and Redux' },\n  { id: '6', name: 'Connecting State Everywhere' },\n  { id: '7', name: 'Todo with advanced Redux' },\n  { id: '8', name: 'Todo but more Features' },\n  { id: '9', name: 'Todo with Notifications' },\n  { id: '10', name: 'Hacker News with Redux' },\n];\n\n// //////////\n// schemas //\n// //////////\nconst todoSchema = new schema.Entity( 'todo' );\n\nconst normalizedTodos = normalize( todos, [todoSchema] );\n// console.log(normalizedTodos);\n/*  \n{entities: {…}, result: Array(10)}\nentities:\n  todo:\n    1: {id: \"1\", name: \"Redux Standalone with advanced Actions\"}\n    2: {id: \"2\", name: \"Redux Standalone with advanced Reducers\"}\n    3: {id: \"3\", name: \"Bootstrap App with Redux\"}\n    4: {id: \"4\", name: \"Naive Todo with React and Redux\"}\n    5: {id: \"5\", name: \"Sophisticated Todo with React and Redux\"}\n    6: {id: \"6\", name: \"Connecting State Everywhere\"}\n    7: {id: \"7\", name: \"Todo with advanced Redux\"}\n    8: {id: \"8\", name: \"Todo but more Features\"}\n    9: {id: \"9\", name: \"Todo with Notifications\"}\n    10: {id: \"10\", name: \"Hacker News with Redux\"}\nresult: (10) [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"]\n*/\n\nconst initialTodoState = {\n  entities: normalizedTodos.entities.todo,\n  ids: normalizedTodos.result,\n};\n\n// action types\nconst TODO_ADD = 'TODO_ADD';\nconst TODO_TOGGLE = 'TODO_TOGGLE';\nconst FILTER_SET = 'FILTER_SET';\n\n// //////////\n// reducer //\n// //////////\nfunction todoReducer(state = initialTodoState, action) {\n  switch(action.type) {\n    case TODO_ADD : {\n      return applyAddTodo(state, action);\n    }\n    case TODO_TOGGLE : {\n      return applyToggleTodo(state, action);\n    }\n    default : return state;\n  }\n}\n\nfunction applyAddTodo( state, action ){\n  const todo = { ...action.todo, completed: false };\n  const entities = { ...state.entities, [todo.id]:todo };\n  const ids = [ ...state.ids, action.todo.id ];\n  return { ...state, entities, ids };\n};\n\nfunction applyToggleTodo( state, action ){\n  console.log(state)\n  /* \n  entities:\n    1: {id: \"1\", name: \"Redux Standalone with advanced Actions\"}\n    2: {id: \"2\", name: \"Redux Standalone with advanced Reducers\"}\n    3: {id: \"3\", name: \"Bootstrap App with Redux\"}\n    4: {id: \"4\", name: \"Naive Todo with React and Redux\"}\n    5: {id: \"5\", name: \"Sophisticated Todo with React and Redux\"}\n    6: {id: \"6\", name: \"Connecting State Everywhere\"}\n    7: {id: \"7\", name: \"Todo with advanced Redux\"}\n    8: {id: \"8\", name: \"Todo but more Features\"}\n    9: {id: \"9\", name: \"Todo with Notifications\"}\n    10: {id: \"10\", name: \"Hacker News with Redux\"}\n  ids: (10) [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"]\n  */\n  // console.log(action)\n  /* \n    todo: {id: \"1\"}\n    type: \"TODO_TOGGLE\"\n  */\n  const id = action.todo.id;\n  // console.log(id) // 1\n  const todo = state.entities[id];\n  // console.log(todo) // {id: \"1\", name: \"Redux Standalone with advanced Actions\"}\n  const toggoledTodo = { ...todo, completed: !todo.completed };\n  // console.log(toggoledTodo) // {id: \"1\", name: \"Redux Standalone with advanced Actions\", completed: true}\n  const entities = { ...state.entities, [id]: toggoledTodo }; // id number where you want to write completed/incompleted\n    return { ...state, entities };\n};\n\nfunction filterReducer(state = 'SHOW_ALL', action) {\n  switch(action.type) {\n    case FILTER_SET : {\n      return applySetFilter(state, action);\n    }\n    default : return state;\n  }\n}\n\nfunction applySetFilter(state, action) {\n  return action.filter;\n}\n\nconst rootReducer = combineReducers( \n  { \n    todoState:todoReducer,\n    filterState: filterReducer,\n    }\n);\n\n// //////////////////\n// action creators //\n// //////////////////\nfunction doAddTodo(id, name) {\n  return {\n    type: TODO_ADD,\n    todo: { id, name },\n  };\n}\n\nfunction doToggleTodo(id) {\n  return {\n    type: TODO_TOGGLE,\n    todo: { id },\n  };\n}\n\nfunction doSetFilter(filter) {\n  return {\n    type: FILTER_SET,\n    filter,\n  };\n}\n\n// ////////\n// store //\n// ////////\n\nconst logger = createLogger();\n\nconst store = createStore(\n  rootReducer,\n  undefined,\n  applyMiddleware(logger)\n  );\n  \n// /////////////\n// components //\n// /////////////\nfunction TodoApp() {\n  return (\n    <div>\n      < ConnectedTodoCreate/>\n      < ConnectedTodoList />\n    </div>\n  );\n}\n\nfunction TodoList({ todosAsIds }) {\n  // console.log(todosAsIds)\n  //  [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"]\n  return (\n    <div className=\"container\" >\n      {todosAsIds.map(todoId => <ConnectedTodoItem\n        key={todoId}\n        // sending in ids -> 1, 2, 3 ......\n        todoIIIId={todoId}\n      />)}\n    </div>\n  );\n}\n\nfunction TodoItem( { todo, onToggleTodo } ) {\n  // console.log(todo)\n  /* \n    {id: \"1\", name: \"Redux Standalone with advanced Actions\"}\n    {id: \"2\", name: \"Redux Standalone with advanced Reducers\"}\n    {id: \"3\", name: \"Bootstrap App with Redux\"}\n    {id: \"4\", name: \"Naive Todo with React and Redux\"}\n    {id: \"5\", name: \"Sophisticated Todo with React and Redux\"}\n    {id: \"6\", name: \"Connecting State Everywhere\"}\n    {id: \"7\", name: \"Todo with advanced Redux\"}\n    {id: \"8\", name: \"Todo but more Features\"}\n    {id: \"9\", name: \"Todo with Notifications\"}\n    {id: \"10\", name: \"Hacker News with Redux\"} \n  */\n  const { name, id, completed } = todo;\n  return (\n    <div className={ completed ? \"row line\" : \"row\"} >\n      {name }\n      <button\n        className=\"btn\"\n        type=\"button\"\n        onClick={() => onToggleTodo(id)}\n      >\n        {completed ? \"Incomplete\" : \"Complete\"}\n    </button>\n    </div>\n  );\n}\n\nfunction TodoCreate( { props } ) {\n\n  const [ value, setValue ] = useState(\"\");\n\n  \n  const onChangeName = function(event){\n    setValue = event.target.value\n    return setValue\n  };\n\n  const onCreateTodo = function(event){\n    props.onAddTodo(value);\n    setValue = ''\n    event.preventDefault();\n  };\n\n  return (\n    <div>\n      <form onSubmit={onCreateTodo}>\n        <input \n          type=\"text\"\n          placeholder= \"Add Todo...\"\n          value = {value}\n          onChange = {onChangeName}\n        />\n        <button type=\"submit\">Add</button>\n      </form>\n    </div>\n  )\n\n}\n\n// //////////\n// Connect //\n// //////////\n\n// conecting react and redux\nfunction mapStateToPropsList( state ){\n  // console.log(state.todoState)\n  return{\n    // todosAsIds: state.todoState.ids,\n    todosAsIds: getTodosAsIds(state)\n  }\n}\n\nfunction mapStateToPropsItem( state, props ){\n  // console.log(state)\n  /*  \n  {todoState: {…}, filterState: \"SHOW_ALL\"}\n  filterState: \"SHOW_ALL\"\n  todoState:\n    entities:\n      1: {id: \"1\", name: \"Redux Standalone with advanced Actions\"}\n      2: {id: \"2\", name: \"Redux Standalone with advanced Reducers\"}\n      3: {id: \"3\", name: \"Bootstrap App with Redux\"}\n      4: {id: \"4\", name: \"Naive Todo with React and Redux\"}\n      5: {id: \"5\", name: \"Sophisticated Todo with React and Redux\"}\n      6: {id: \"6\", name: \"Connecting State Everywhere\"}\n      7: {id: \"7\", name: \"Todo with advanced Redux\"}\n      8: {id: \"8\", name: \"Todo but more Features\"}\n      9: {id: \"9\", name: \"Todo with Notifications\"}\n      10: {id: \"10\", name: \"Hacker News with Redux\"}\n    ids: (10) [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"]\n  */\n  // console.log(props)\n /* \n  {todoIIIId: \"1\"}\n  {todoIIIId: \"2\"}\n  {todoIIIId: \"3\"}\n  {todoIIIId: \"4\"}\n  {todoIIIId: \"5\"}\n  {todoIIIId: \"6\"}\n  {todoIIIId: \"7\"}\n  {todoIIIId: \"8\"}\n  {todoIIIId: \"9\"}\n  {todoIIIId: \"10\"}\n    \n  */\n  return {\n    // sending 1 id at one itteration\n    // todo: state.todoState.entities[props.todoIIIId],\n    todo: getTodo(state, props.todoIIIId),\n  }\n}\n\nfunction mapDispatchToPropsItem( dispatch ){\n  return {\n    onToggleTodo: id => dispatch( doToggleTodo(id)),\n  }\n}\nfunction mapDispatchToPropsCreate( dispatch ){\n  return {\n    onAddTodo: name => dispatch( doAddTodo( uuid(), name )),\n  };\n}\n\n// ///////////\n// selector //\n// //////////\nfunction getTodosAsIds(state) {\n  return state.todoState.ids;\n}\n\nfunction getTodo(state, todoId){\n  return state.todoState.entities[todoId]\n}\n\nconst ConnectedTodoList = connect( mapStateToPropsList )( TodoList );\nconst ConnectedTodoItem = connect( mapStateToPropsItem, mapDispatchToPropsItem )( TodoItem );\nconst ConnectedTodoCreate = connect( null, mapDispatchToPropsCreate )( TodoCreate );\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <TodoApp/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}