{"ast":null,"code":"var _jsxFileName = \"/Users/knight/FrontEnd_Projects/React/Redux/tamming-state/1-connecting-state/2-provider-connect/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { combineReducers, createStore } from 'redux';\nimport { Provider, connect } from 'react-redux';\nimport TodoApp from \"./app\";\n/* \nWhen using redux with react , Provider component should be top \nlevel component of your appliaction.\n\nComponent has one prop as input: redux store that you created \nwith createStore();\n*/\n\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectedTodoApp = connect(mapStateToProps, mapDispatchToProps)(TodoApp);\n\nfunction mapStateToProps(state) {\n  return {\n    todos: state.todoState\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onToggleTOdo: id => dispatch(doToggleTodo(id))\n  };\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(ConnectedTodoApp, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 5\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/knight/FrontEnd_Projects/React/Redux/tamming-state/1-connecting-state/2-provider-connect/src/index.js"],"names":["React","ReactDOM","combineReducers","createStore","Provider","connect","TodoApp","ConnectedTodoApp","mapStateToProps","mapDispatchToProps","state","todos","todoState","dispatch","onToggleTOdo","id","doToggleTodo","render","store","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA4C,OAA5C;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,aAAlC;AACA,OAAOC,OAAP,MAAoB,OAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,aAAP;;AAEA,MAAMC,gBAAgB,GAAGF,OAAO,CAAEG,eAAF,EAAmBC,kBAAnB,CAAP,CAAgDH,OAAhD,CAAzB;;AAEA,SAASE,eAAT,CAA0BE,KAA1B,EAAiC;AAC/B,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACE;AADR,GAAP;AAGD;;AACD,SAASH,kBAAT,CAA6BI,QAA7B,EAAuC;AACrC,SAAO;AACLC,IAAAA,YAAY,EAAEC,EAAE,IAAIF,QAAQ,CAACG,YAAY,CAACD,EAAD,CAAb;AADvB,GAAP;AAGD;;AACDd,QAAQ,CAACgB,MAAT,eACI,QAAC,QAAD;AAAU,EAAA,KAAK,EAAIC,KAAnB;AAAA,yBACA,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,QADJ,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { combineReducers, createStore} from 'redux';\nimport { Provider, connect } from 'react-redux';\nimport TodoApp from \"./app\";\n\n/* \nWhen using redux with react , Provider component should be top \nlevel component of your appliaction.\n\nComponent has one prop as input: redux store that you created \nwith createStore();\n*/\n\n\nimport './index.css';\n\nconst ConnectedTodoApp = connect( mapStateToProps, mapDispatchToProps )( TodoApp );\n\nfunction mapStateToProps( state ){\n  return {\n    todos: state.todoState,\n  }\n}\nfunction mapDispatchToProps( dispatch ){\n  return {\n    onToggleTOdo: id => dispatch(doToggleTodo(id))\n  }\n}\nReactDOM.render(\n    <Provider store = {store} >\n    <ConnectedTodoApp/>\n    </Provider>,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}