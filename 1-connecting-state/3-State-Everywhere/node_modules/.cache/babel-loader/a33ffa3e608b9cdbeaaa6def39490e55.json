{"ast":null,"code":"var _jsxFileName = \"/Users/knight/FrontEnd_Projects/React/Redux/tamming-state/1-connecting-state/2-provider-connect/src/app.js\";\nimport { connect } from 'react-redux'; // function component(props){\n// }\n// connect( [mapStateToProps], [mapDispatchToProps],\n//     [mergeProps], [options])(...);\n// const ConnectedComponent = connect(...)(component);\n\nimport { combineReducers, createStore } from 'redux'; // ///////////////\n// actions types /\n// ///////////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TODO_ADD = 'TODO_ADD';\nconst TODO_TOGGLE = 'TODO_TOGGLE';\nconst FILTER_SET = 'FILTER_SET'; // //////////\n// reducers /\n// //////////\n\nconst todos = [{\n  id: 0,\n  name: 'learn redux'\n}, {\n  id: 1,\n  name: 'learn mobx'\n}]; // 1\n\nfunction todoReducers(state = todos, action) {\n  switch (action.type) {\n    case TODO_ADD:\n      {\n        return applyAddTodo(state, action);\n      }\n\n    case TODO_TOGGLE:\n      {\n        return applyToggleTodo(state, action);\n      }\n\n    default:\n      return state;\n  }\n}\n\n;\n\nfunction applyAddTodo(state, action) {\n  const todo = Object.assign({}, action.todo, {\n    completed: false\n  });\n  return state.concat(todo);\n}\n\n;\n\nfunction applyToggleTodo(state, action) {\n  return state.map(todo => {\n    return todo.id === action.todo.id ? Object.assign({}, todo, {\n      completed: !todo.completed\n    }) : todo;\n  });\n}\n\n; // 2\n\nfunction filterReducer(state = 'SHOW_ALL', action) {\n  switch (action.type) {\n    case FILTER_SET:\n      {\n        return applySetFilter(state, action);\n      }\n\n    default:\n      return state;\n  }\n}\n\n;\n\nfunction applySetFilter(state, action) {\n  return action.filter;\n}\n\n; // //////////////////\n// action creators  /\n// //////////////////\n\nfunction doAddTodo(id, name) {\n  return {\n    type: TODO_ADD,\n    todo: {\n      id,\n      name\n    }\n  };\n}\n\n;\n\nfunction doToggleTodo(id) {\n  return {\n    type: TODO_TOGGLE,\n    todo: {\n      id\n    }\n  };\n}\n\n;\n\nfunction doSetFilter(filter) {\n  return {\n    type: FILTER_SET,\n    filter\n  };\n}\n\n; // store\n\nconst rootReducer = combineReducers({\n  todoState: todoReducers,\n  filter: filterReducer\n});\nconst store = createStore(rootReducer); // view layer\n\nfunction TodoApp({\n  todos,\n  onToggleTodo\n}) {\n  console.log(todos);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      onToggleTodo: onToggleTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TodoApp;\n;\n\nfunction TodoList({\n  todos,\n  onToggleTodo\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: todo,\n      onToggleTodo: onToggleTodo\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 30\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = TodoList;\n\nfunction TodoItem({\n  todo,\n  onToggleTodo\n}) {\n  const {\n    name,\n    id,\n    completed\n  } = todo;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [name, /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => onToggleTodo(id),\n      children: completed ? \"Incomplete\" : \"Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = TodoItem;\n\nfunction mapStateToProps(state) {\n  return {\n    todos: state.todoState\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onToggleTodo: id => dispatch(doToggleTodo(id))\n  };\n}\n\nconst ConnectedTodoApp = connect(mapStateToProps, mapDispatchToProps)(TodoApp);\nexport default TodoApp;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TodoApp\");\n$RefreshReg$(_c2, \"TodoList\");\n$RefreshReg$(_c3, \"TodoItem\");","map":{"version":3,"sources":["/Users/knight/FrontEnd_Projects/React/Redux/tamming-state/1-connecting-state/2-provider-connect/src/app.js"],"names":["connect","combineReducers","createStore","TODO_ADD","TODO_TOGGLE","FILTER_SET","todos","id","name","todoReducers","state","action","type","applyAddTodo","applyToggleTodo","todo","Object","assign","completed","concat","map","filterReducer","applySetFilter","filter","doAddTodo","doToggleTodo","doSetFilter","rootReducer","todoState","store","TodoApp","onToggleTodo","console","log","TodoList","TodoItem","mapStateToProps","mapDispatchToProps","dispatch","ConnectedTodoApp"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\n\n\n// function component(props){\n\n// }\n\n// connect( [mapStateToProps], [mapDispatchToProps],\n//     [mergeProps], [options])(...);\n\n    \n// const ConnectedComponent = connect(...)(component);\nimport { combineReducers, createStore} from 'redux';\n\n// ///////////////\n// actions types /\n// ///////////////\nconst TODO_ADD = 'TODO_ADD';\nconst TODO_TOGGLE = 'TODO_TOGGLE';\nconst FILTER_SET = 'FILTER_SET';\n\n// //////////\n// reducers /\n// //////////\nconst todos = [\n  { id: 0, name: 'learn redux' },\n  { id: 1, name: 'learn mobx' }\n];\n// 1\nfunction todoReducers( state = todos, action){\n  switch(action.type){\n    case TODO_ADD: {\n      return applyAddTodo( state, action );\n    }\n    case TODO_TOGGLE: {\n      return applyToggleTodo( state, action );\n    }\n    default: return state;\n  }\n};\n\nfunction applyAddTodo( state, action ){\n  const todo = Object.assign( {}, action.todo, { completed: false } );\n\n  return state.concat(todo);\n};\n\nfunction applyToggleTodo( state, action ){\n  return state.map( (todo) => { \n    return todo.id === action.todo.id \n    ? Object.assign( {}, todo, { completed: !todo.completed })\n    : todo\n  });\n};\n\n// 2\nfunction filterReducer( state = 'SHOW_ALL', action ){\n  switch( action.type ){\n    case FILTER_SET: {\n      return applySetFilter( state, action );\n    }\n    default: return state;\n  }\n};\n\nfunction applySetFilter( state, action ){\n  return action.filter;\n};\n\n// //////////////////\n// action creators  /\n// //////////////////\nfunction doAddTodo ( id, name ){\n  return { \n    type: TODO_ADD,\n    todo: { id, name }\n  }\n};\n\nfunction doToggleTodo( id ){\n  return {\n    type: TODO_TOGGLE,\n    todo: { id }\n  }\n};\n\nfunction doSetFilter( filter ){\n  return {\n    type: FILTER_SET,\n    filter,\n  }\n};\n\n// store\nconst rootReducer = combineReducers( {\n  todoState: todoReducers,\n  filter: filterReducer,\n} )\n\nconst store = createStore( rootReducer );\n\n// view layer\n\nfunction TodoApp( { todos , onToggleTodo } ) {\n  console.log(todos);\n\n  return (\n    <div className=\"App\">\n      <TodoList \n        todos = {todos}\n        onToggleTodo = {onToggleTodo} \n        />\n    </div>\n  );\n};\n\nfunction TodoList( { todos, onToggleTodo } ){\n  return (\n    <div>\n      { todos.map( (todo) => < TodoItem \n          key={todo.id} \n          todo={todo} \n          onToggleTodo={onToggleTodo}\n          /> \n      )}\n    </div>\n  )\n}\n\nfunction TodoItem( { todo, onToggleTodo }){\n  const { name, id, completed } = todo;\n  return (\n    <div>\n      {name}\n      <button\n        type=\"button\"\n        onClick= { () => onToggleTodo( id ) }\n        >\n          { completed ? \"Incomplete\": \"Complete\" }\n      </button>\n    </div>\n  );\n}\n\nfunction mapStateToProps( state ){\n  return {\n    todos: state.todoState,\n  }\n}\nfunction mapDispatchToProps( dispatch ){\n  return {\n    onToggleTodo: id => dispatch(doToggleTodo(id))\n  }\n}\n\nconst ConnectedTodoApp = connect( mapStateToProps, mapDispatchToProps )( TodoApp );\n\nexport default TodoApp;\n"]},"metadata":{},"sourceType":"module"}